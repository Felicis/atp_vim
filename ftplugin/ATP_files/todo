# Author: Marcin Szamotulski
# This is a to do list for ATP vim plugin.
# I put here notes on planned features, 
# but also I use this file for bugs that I found.

pedit for openning without changing the window number! 

ToDo: add support for plain TeX users in the function atplib#search#SearchPackage()
	in TeX one writes: '\input tikz.tex' instead of '\usepackage{tikz}'
	in while in ConTeXt '\usemodule[tikz]'

ToDo: :2match (and :3match)  in HighlightMatchingPair and Search function - it
is better to use matchadd().

    "THIS MIGHT BE USEFULL:
    The first column is 1.	0 is returned for an error.
    A more advanced example that echoes the maximum length of
    all lines:
    echo max(map(range(1, line('$')), "virtcol([v:val, '$'])"))

TODO: make toc work with parts!
 		The work has started ...

TODO: Check against lilypond 

<Ctrl-W>k<Ctrl-W>_		Fast switching bettween buffers				

<HARD>
Make a function which reads the log file and sets error list.	
It is quite hard to make efm so that it gets error messages with file name.
Possible solution is to write w program/function to rewrite the log message.

In 'plaintex' MakeLatex results in an infinte loop. 

:S /{pattern}/ is not working in plain tex files.

To do: Make an if statement: write if the history is nonempty!
#To do: \left\.:\right pair! (let the user write the closing bracket.
	also \lvert:\rvert, \lVert:\rVert (only in amsmath)
 
To do: test SyncXpdf when syncing the last page.
	It doesn't work as it should - this is a minor bug.

NOTE: in aux file definitions are resolved (see \av)

To do: :R Replace like :S  (project files). /there might be vim way to do that/.

Bug:  BibSearch /Brzeznski/ shows articles of Pflaum! (Mat.bib).
Because he is in:
    MRCLASS   
    MRNUMBER  
    MRREVIEWER
The problem is that All flag doesn't show this entries.  

Todo: Write searchpair function for log file which ignores bracketes in
Overfull message (it happens that these brackets doesn't come in pairs!).

Todo: SetProjectName should test project scripts, I think LoadProject has this code!
	There are two function to implement this: FindProjectScripts() and GetProjectScript()

Todo: atplib#motion#TexSyntaxMotion is not working on last H of: \mbox{$L(A,H)=(A\otimes A)^{co\,H}$}
Todo: urlop.tex \includegraphics{...} -> error which is not seen by ':ShowErrors e' command.
	The error was caused because the graphics file was empty.
Todo: imap <buffer> \8 It is not good to have any imapping starting with '\'.
To do: vip: bmove and emove are not 100% accurate \chapter{...}\Xlabel but \chapter{...} X\label will work (X is the place were we move fromm } just before using w normal command.
	This can be solved with moving till first ' ' (white space) or '\' or possibly some other character but before the first '}'.
To do: tag-stack
To do: turn off autoindent in align ... would be OK?

To do:     au BufEnter *.tex.project.vim set nowrap textwidth=0
	(Set this not using filetype plugin)
	One can do that in plugin/atp.vim file - but it might not be worthy to do that just for one setting.

To do: 	$i:\Sub_{\Alg^H}(A)\subseteq\Sub_\Alg(A)^\mathit{op<TAB HERE>$ preserves all
	<Tab> doesn't close {! 

NOTE: with j motion it can put \mathit{} not just \mathit{.	
To do: TOC when modifiable is set.

To do: NEnv (hit bottom, cont at top) 
To do: Check AMSRef, with xy-ks:galois-theory-of-skew-fields there was no comma after key.  

To do: add this error message.
	    (/home/texmf/tex/settings-galois.tex) (./HopfGaloisTheory-field.aux

	    ! Package natbib Error: Bibliography not compatible with author-year citations.

	    (natbib)                Press <return> to continue in numerical citation style.


	    See the natbib package documentation for explanation.
	    Type  H <return>  for immediate help.
	     ...                                              
							      
	    l.144 ...and\NAT@force@numbers{}\NAT@force@numbers

To do: a command/map to switch all the ATP maps on/off :) cool
	DONE FOR IMAPS.
To do: gw when the paragraph is ended on last line of the file (but not on \end{document} (it hapens in input files).

To do: Open should have an option to show full path.

To do: print file in a TOC iff it is in the buffer list. 
       Clear the meaning of t:atp_toc_buflist (it seems that it is not working: the
       files which are not in this list are printed in TOC).

But I think it is better this way, there is vie to match just inside the align (or any other env).
To do: vip is not stopped before \begin{align}:
    is a bijection. In Theorem~\ref{thm:cogalois-extensions} we show that for an
    \(H\)-coextension \(C\sir C^H\) over a ring \(k\) there exists a Galois
    correspondence: 
    \begin{align}\label{eq:prelim-coGalois}
	<HERE vip>\qid(H)\cong\qquot(H)^\mathit{op}\lgalois{K\mapsto C/CK^+}{}\qquot(\nicefrac{C}{C^{H}})^\mathit{op} 
    \end{align}
   
To do: \Labels command: it might be better to put page number instead of line number. 	
To do: UnWrap command.

To do: when changing bib file, the Main File is not processing (atp is not
loaded for bib files!)

To do: \varespilon,... - maps, completion
To do: fix the colors of pdfLaTeX in status (in mygvim it is not working - this might be a local issue).

(A VERY GOOD IDEA): write a package which lists in a file all theorems with numbers that tex is using.
	This can be taken from list of theorems (lot) and list of definitions (lod) files.
	This can be used to have more labels in atplib#motion#GotoLabel (tex can print the line number where it is).
	This is implemented in ntheorem.sty.

To do: Suggest to use wdiff to get diff of pdf's with:
	wdiff -w "\textcolor{red}{" -x "}" -y "\textcolor{blue}{" -z "}" file_rev1.tex file_rev2.tex > file_diff.tex
	Or make a function which: removes comment lines, makes diff of
	\begin{document}:\end{document}, lets choose which preambule to use if
	they differ.
	The problematic is making diff of math zones.

Todo: \a has a strange behaviour with respect to tabs. 

To do: The function 'atplib#FindAndOpen' will not start gvim if it is
	not running.
To do: read atp-:SyncXpdf -> port this for Okular.
To do: minimalise the number of options (for example: remove gloabl viewer options)
To do: TOC clicable: <LeftMouse>=like enter <S-LeftMouse>=ForwardSearch
Note: do not set b:atp_okularOptions="--unique" by default. 
To do:
When opening skeleton file -> the g:atp_MathZone is like it was for file type plaintex, but the file type has changed.
The only solution is to set the variable g:tex_flavor="tex"
to do: gm (end math) gM (begin math)
To do: find a better way of dealing with g:atp_latexpackages (update them)
To do: statusNotifHi -> change in to a highliht group name.
To do: xpdfpid() function should be writtine in Python.
To do: rewrite MakeLatex in python (this will help with the screen isue)
To do: SyncTex for (log file --> viewer) can be rewritten to use synctex (usually there is line number of error around -> we can get the position of the pdf file) - but since this is not very useful, this is not urgent.
To do: write python script to parse log file and return list of dictionaries { file : '', line : '', page : '', errormsg : '', errortype : '' )
To do: only in beamer: GotoFrame <frame>: number, title matched by pattern>
To do:(simple and nice) in GotoEnvironemt: (THIS IS NOT POSSIBLE it is a feature of n/N in vim)
	    There is no way to make this searches silent wiht :S and /
	    its better to silently call the functions Search() and search()
To do: for Okular users switch document loaded in okular when changing buffers (handsome).
	for Xpdf it is easy to set: just put b:atp_XpdfServer="tex_files" in atprc.
To do: There are three completion function for environment names: atplib#motion#Env_compl (motion.vim, GotoSection, Nenv, ...) and EnvCompletion and EnvCompletionWithoutStarEnvs (various.vim, :WrapEnvironment, :ChangeEnv), F_compl (:F, :B)
	Make them more dependent on LocalEnvironments (to appear only what is defined!)

# To do: check \cite{ completion on startup (from bib file). b:ListOfFiles doesn't contain Mat.bib.
		It might also be %&latex issue -> test 
		THIS IS BECAUSE: skeleton file opens as a tex file and the variables are not reloaded. 

# To do: inner paragraph should be (?) ended with \pause (beamer)
# To do: \{:} are matched as brackets.
# Bug: Labels if label is in comment its line counts (there might be two \label command with the same label but one commented out, it happens that the label in comment counts!, while it should not.
# TEST: progress bar for project files (project variables).
Bad idea (gq is for sth else!): 'formatexpr' (gw -> gq this shoulr be done using format exrpression)
# WOW: the first line: %&latex or %&pdflatex -> tex decides what tool to use! -> ATP should respect this!
# TO DO: using http://python-xlib.sourceforge.net/?page=documentation it should be possible to raise the viewer window after compilation :)
# NOTE: if the latex return code is non zero then reference numbers (Lemma
# X.Y) may be '?'! ( I don't know why its like that )
SyncTex:
	Should test if the viewer is running (this can be done with the help of python and psutils) 
	if not it should run the viewer first.

<Nice Feature> make atprc.vim file in the gentoo style

WINDOWS: Runtime error!
	 Program ...\gvim.exe
	 R6034
	 - An application has made an attempt to load the C runtime library incorrecly.
	 - Please contact the application's support for more information.

bibliograph (python) requirements:
bibliograph-rendering, zope-schema, zope-component

zathura: how to implement inverse searching using bookmarks:
    "https://bbs.archlinux.org/viewtopic.php?pid=807105#p807105"
    this can be done with python script.

ToDo: g:atp_inputfile_pattern : maybe it should be updated by :InputFiles if somebody added/removed biblatex.
ToDo: make ToC work with tabs: find file in another tab and go there (?)
ToDo: The following line is not recognized by TOC: \chapter[Decomposition of values]{Decomposition of Banzhaf and Shapley values}\label{chap:decomposition-of-values}
MakeLatex: There ware undefined references this should be shown in debug mode (THIS BEGIN SPECIAL DEBUG MODE FOR MakeLatex).
ToDo: in insert mode auTeX can wait until compilation stops: when compilers ends it should generate CursorMovedI event if the mode is insert mode - this can be done by a simple function atplib#CursorMoveI(), hmm this is not good, b:atp_PythonPIDs will be not 0
ToDo: MakeLatex on hgt_field.tex (under BZR) pdflatex+bibtex+pdflatex (should do one pdflatex more).
ToDo: Status line for QuickFix Window.
ToDo: ChangeEnv \(:\) => \begin{equation}:\end{equation}
ToDo: CTOC doesn't change when I change the title. Only after running TOC!
ToDo: gw on \end{proposition} joints this line with the next one.

Look at: bibweb
Note: { \{ <Tab>  \} => { \{ \}  \}

To do: 
    \begin{e1}
	\begin{e2}
	... 'vae'
	\end{e2}
    \end{e1}
    Then move to end of e1 and type agina 'ae', it will contain only e2, unlike going to the end of e2 and 'vae'.
    This is a problem with getpos(".") in visual mode in LatexBox_GetCurrentEnvironment.
    See comments in LatexBox_GetCurrentEnvironment.

Bug: atplib#complete#CloseLastEnvironment() if invoked without arguments: the variable l:begin_line_env in line 193 is not defined.

ToDo: atplib#complete#CloseLastEnvironment() should not move cursor when closing \begin:\end pairs - then one can use <C-M to open new line.

ToDo: atplib#complete#CloseLastBracket() add some options: bracket pattern, etc ... for algorithmic envs.

ToDo: Find how to make it possible to run :copen 5 (w:quickfix_title will not work)
	Test this feature if it changes size of qf window (callback, etc...)
	At least this is doc.
ToDo: when working with two tex files and opened QuickFix window, :copen changes the errorfile, it ATP should change b:atp_ErrorFormat to the ErrorFormat of corresponding buffer.
this is not working:
"     au FileType qf :call <SID>SetErrorFormat(getbufvar(bufnr(fnamemodify(&l:errorfile, ":r").".tex"),"atp_ErrorFormat"),1)
two files and one QFList, set efm, change it and ...

New Feature: add dictionary of J.Trzeciak: http://www.impan.pl/cgi-bin/dictsearch?q=<SEARCH_KEYWORD>
	I even can add completion as there are web pages with words starting with each letter, for example for m:
	    http://www.impan.pl/Dictionary/m.html

Bug: progress bar starts at [5] :MakeLatex /probably because UnicodeDecodeError/
add note to doc.

NOTE: from vim_dev CursorHoldRepeat and CursorHoldRepeatI are on the way (I needed them somewhere).

Delete! could also delete all files under b:atp_TempDir and g:atp_TempDir (but not the directories, which are removed when vim exists).

Bug: The problem with TOC window is that it is the same buffer for different tabs, if one changes it in one tab it changes in the other one. This should be FIXED. I can use tabpagenr()

Example from doc how to define maps in filetype plugins:
I should follow the hasmapto step for every map!

	" Add mappings, unless the user didn't want this.
	if !exists("no_plugin_maps") && !exists("no_mail_maps")
	  " Quote text by inserting "> "
	  if !hasmapto('<Plug>MailQuote')
	    vmap <buffer> <LocalLeader>q <Plug>MailQuote
	    nmap <buffer> <LocalLeader>q <Plug>MailQuote
	  endif
	  vnoremap <buffer> <Plug>MailQuote :s/^/> /<CR>
	  nnoremap <buffer> <Plug>MailQuote :.,$s/^/> /<CR>
	endif

Viewer command (map) might say: [ATP:] openning ... some times it takes a second or two, this will make the time past faster ;)

ToDo: do what hier plugin does (but not for tex files) highlight what is in quick fix window in the buffer (correct).
ToDo: vip is matching \label and \hypertarget
ToDo: I make vip to stop on \begin:\end but this is 

ToDo: vip stops before \begin and before \[ but not before \begin{equation}, is this the right way?
	vip stops one left to much before a \\
Todo: << in visual mode is working not as should.
Todo: sort completion for Labels according to line number (and files).

Bug: :Labels with :TOC

ToDo: not copying aux file when there are errors is some times not nice. Maybe we can copy it to aux1 and use it or store it in memory.

IDEA: from vim_use: conceal comments:
http://www.vim.org/scripts/script.php?script_id=3583

ToDo: Recover plugin which I use breaks auTeX.

ToDo: b:atp_updatetime_insert, b:atp_updatetime_normal should be buffer local. Maybe for long files they should have different setting.

Bug: Error while opening plain tex files (%&tex)

Bug: comments vim option is not working well with [d. Check [i, :dsearch, :isearch are not finding anything. 

ToDo: latextags.py could respect tagrelative (this might be important for project in version control systems..

:) : see :help :ownsyntax

ToDo: latextags.py finds \label inside \def statements! (but this way it is faster)
ToDo: add options to making tags: append tags (note that tags should be sorted)
	( in this way one can have one tag file for many files, this might be nice if one edits two ore more files )
ToDo: see atp-:NiceDiff  -- I said that I will try to do sth :)

ToDo: rewrite :S in python 		-> this will be as fast as :ijump.
ToDo: look into LocalCommands for patterns which might be used in make_defi_dict
ToDo: InputFiles when called from different directory.
ToDo: :BibSearch -- when there is (STRING) the last ) is lost and syntax fails. Track this.
ToDo: There is quite big mess when callig gf (how files are listed)

ToDo: opening skeletal file: b:ListOfFiles is empty => b:atp_LocalCommands is empty.
ToDo: \todo[inline]{ todo keywords are completing here, they shoud not, I think}
ToDo: \partial \overline \overline{
ToDo: python compiler should make g:atp_TempDir if it doesn't exists (I deleted it and there was an error).
ToDo: test b:atp_updatetime_ variables when they are set to 0, test &l:updatetime setting in options.vim (line 920).
ToDo:	Make better accent maps which takes the letter as an argument and returns accented one.
	`"a -> \"{a} it would be nice to make it without asking in the command line maybe using ? 
ToDo:   How to solve the problem \{:\. (it seems to be not solved) or mayby I just don't remember how to do that in LaTeX.
ToDo:   \wedge map #& should be defined with a space after wedge, and some other maps as well \partial (`6)
	Maybe make an option with list of commands to which TabCompletion will append a space.
    (I had problem implementing this as a configurable feature)
ToDo: (IDEA) make C_M inside align inteligent ( put & if first column is empty ) 
ToDo:  inside tikzpicture \beg<Tab>, \begin{slo<Tab> are not working! node[...]{\(d<Tab> => ) should \)
	in my test file it works...
	only \begin{scope}<Tab> will not close environment since keywords are 'flying' around ;).
ToDo:  gw mis behaves when it is near \todo{}
ToDo:  #ve -> \vee colides with #v -> \vartheta (imaps)
	#Z -> \mathrm ?
ToDo:  YankSection, DeleteSection, should not yank sections which are commeted out.
ToDo:  put all the leader variables in doc (g:atp_infty_leader might not be documented -- check this).
ToDo:  add \forall \exists maps - I don't know the right keays to use: <C-a> and <C-m>?
ToDo:  recover.vim plugin fails with my settings when openinig a file from other directory than its base directory!
ToDo:  HelpIMathIMaps add all math imaps, make it like ShowOptions, allow for patterns.
	Maybe make a HelpMap command to search for a map - just one command.
	:HelpMap [pattern] [mode]
       where it starts/ends
ToDo:  I think my changes are such that one cannot turn off 'tikzpicture
	keywords' from completion - this should be ended and tested ...
ToDo:  TOC with two files one beamer (press <Enter> on beamer document)
ToDo:  \\[2em<Tab> \\[2em\]!
ToDo:  vae commented evironment inside another environment will match the
       outer one: do we want that, note that the inner, commented one can be
       marked with _c.
ToDo:  biber log messages /I didn't get a replay from biblatex mailing list/
ToDo:  Why :InputFiles works so slow in seminar.tex (Almeria)
ToDo:  webpage rssreader (see the 9.6.7 message in it and in news - what is
	after <CR> is not showing up - check what is in the xml file.
ToDo:  make >e, >E, >f, >F maps work in vmode (but it might not make much sense)
ToDo:  search for commands (LocalCommands), inside packages which are installed
	under local texmf or which are in the current directory
	/this feature should be optional/
ToDo:  :Wrap \begin{proof} \end{proof} 1 1 around another evnironment.
ToDo:  vie \centerline{...} the end should stop the line. \\ is not well recognized.
ToDo:  TOC should work in a different way in beamer class - should search for
	frame environment, and inside it search for a title.
ToDo:  s:maketoc join lines if title is spanned in more than one line.
ToDo:  add g:atp_package_..._environments to abbreviations
	add completion for command options:
	g:atp_package_PNAME_command_CNAME_options
ToDo:  \mulitcolumn of longtable might need more than one latex run --> look at log file for a message!
ToDo: in options.vim where package files are loaded:
    " We cannot restrict here to not source some files - because the completion
    " variables might be needed later. I need to find another way of using this files
    " as additional scripts running syntax ... commands for example only if the
    " packages are defined.
ToDo: add good log info for TabCompletion: commands values, etc ... and instruct users how to use it.
ToDo: \thref in ntheorem.sty page 11 - LaTeX needs to be run twice.
ToDo: amsthm is loaded by ntheorem with option amsmath
NEW FEATURE: DICTIONARY!!!

# IMPORTANT ToDo:  :ShowErrors actully the error format: only first message contains detailed info about the error.

NOTE: b:atp_ProgressBar if is nonempty, the number start not from 1 (this was after using the :Kill command).
Note: \refstepcounter is not handled well by syntax.vim \ref has syntax group texRefZone, while stepcounter not.
ToDo:  diacrtics maps could be defined only after certain letters - and the letters might be given in a variable.
NOTE:  \({\lfoor X\rfloor<Tab> -- will close as should but also saves the file, why?
	This is because atplib#LocalCommands is run python version saves the
	file, why vim version is not - doesn't need to - operate on the
	buffers!
ToDo: $:$ are closed when they are already closed.
Check: the last tab completions    "{{{3 --------- brackets, algorithmic, abbreviations, close environments
ToDo: if inside tikz env move tikz keywords/commands to the beginning
# Bug:  sometimes when using <Tab> the letter just before is put after completion. I have to restart vim.

# Note: vim will have ]h, [h motions to next highlight group, can be used to
# go to errors, todo's, ... - there's discussion on vim_dev: started on 1 Aug 2011.

Todo: completion for :EditInputFile shows twice xcolors.tex file.
Todo: vim \[...\] when acts on ] markes the next inner paragraph.

Todo: \section when spread along at least two lines.

Todo: if there are no errors, efm should not show any line. Now it shows almost every line of the log file (but not all)
	I need a good test that there are no errors!

# Note: when a line in tikzpicture env is not ending with ; even if
# nonstopmode switch is use pdflatex stops.

Add support for bibunits package in makelatex.py and also for its options.

atplib#motion#GotoFile should check if the file type is set or set it: apv.tex GotoFile input/inputlast.tex
	(this was not reproduced. Should be tested.)

Bug:	When :S enters new buffer an error appears: E15: Invalid expression:
	(even twice, the invalid expression is not written).
	this is not autocommand problem (eventignore=all is not solving the problem)

Todo: _bf map when applied in first column (with some white spaces before! the space is lost - virtual column)

Todo: add support for htlatex: http://www.tug.org/applications/tex4ht/mn.html
Todo: FoldClose()  when closing subsection inside section - this is not working
Todo: :Edit +/<pattern> file   -- this should be added.
	This works, but :Edit main_file will not working when invoked in input file (under different directory!)
Todo: Write how to set 'path' in project files: see the note at the end of options.vim
Check: TimeoutException of psutil lib.
To doc: compare double empty lines, compare spaces.
Todo: w,b commands for motion which treats \ in a good way.
Todo: Make atplib#various#Unwrap work with $:$ and $$:$$.
	the map \u might not be good if \u is used to uncomment!
Todo: split and Toc: moving to wrong window, b:atp_Toc undefined.
Todo: Add latex-errorfilter !
Todo: why \a also has the effect of zb?
Todo: echohl ErrorMsg somewhere is not closed.
Todo: Dsearch neads to have function which reads just one variable (b:atp_MainFile) from project script.
Todo: line 543 notes.tex
    See comment in atplib#complete#CheckClosed (x2)
	(h_{(1)}\otimes k_{(1)<TAB>
	closes ( and after it doesn't want to close { 
	(h_{(1)}\otimes k_{(1)<TAB>}
	closes (
?Todo: In comments "'t" should not be mapped. Or what to do with "'t" in
	English, now it is imapped to \t{} an accent.
Todo:
\newenvironment{longproof}{\textcolor{re<TAB>}{\textbf{Proof:}}}{\nopagebreak[4]\hfill\textcolor{red}{$\blacksquare$}\\}
	g:command = \newenvironment{longproof}{
# Todo: ATP is overwritting user defined maps, there is no simple way to make a map.
Todo: "vi{" is not working for \{...\}  
	I don't overwrite the vim "i{". It is not working with it.
	I can modify "im" to get it work over \{:\}.
Partially: <S-LeftMouse> is not working.
	works in gvim, doesn't in vim inside xterm.
Todo: environment completion should skip lines which starts with \def{...}, and possibly some other stuff. (see settings.tex)
Todo: from "#vim": moving cursor in insert mode break the undo (?)
Todo: open toc and close its window, then do :q -> there is a message that toc
	is not saved, it should not appear. Set the correct buftype
	Actually I cannot reproduce this.
Todo: reverse_search.py should push the error messages of synctex to vim.

# Done: Project files should work when there are two (main) files: main.tex, dir/main.tex (I use it in a tmp directory).
#    Solution: change the variable b:atp_ProjectFileScript and use :WriteProjectFile command to make a new project file. This will work nicely when g:atp_RelativePath is 1 (else one need to change b:atp_MainFile variable as well). One can also delete variables made by atplib#search#TreeOfFiles() function.
Todo: in diffmode autex should be off by default.
	There is no autocmd group for this. This is already done when openning a file in diffmode.
	But this is not working for diffsplit command.
Todo: atplib#complete#CheckBracket()
    \node[anchor=east] (A) at (-5mm,0cm) {\(\Sub_{\textit{Hopf}}(H)\)<TAB>  is not closing {:}  hgt.tex line 240.
    atplib#complete#CheckClosed() should be reviewed 
    when the region starts with closing brackets for example: }}}, then it
    works, but it doesn't when it starts with {} followed by closing brackets
    }}}. 
    MY SOLUTION IS TO START COUNTING where \par or empty line is
    (new paragraph), one might check if this is not inside an environment
    which allows empyt lines which does not start a paragraph (are there any
    such?). 
Todo: reverse_search.py (and other python scripts) remove hardcoded /tmp dir (be platform  independent).
Todo: using lopen and hit enter -> copen is opened, set eventignore=all solves the problem	(ATP is not recognizing a difference between quick fix windows from location lists and from qflists :lopen/:
	(ATP is not recognizing a difference between quick fix windows from location lists and from qflsits :lopen/:copen)
Testing: when \matrix[matrix of math modes] is used \otimes is not concealed, since it is not recognized as math. I could fix:
	(a) ATP_Strlen() do not conceal things if syntax is not math zone,
	(b) recognize this as a math mode.
	Did: back to using TexNewMathZone() function to define tikzpicture zone.
	     back to (b) -- ATP doesn't like to be in math mode when it is not!
	     this requires using \matrix as I do (without 'matrix of math nodes').
Todo: syntax for tikzpicture environment.
	['texMathZoneX', 'texMathZoneT', 'texMathZoneX'] i.e. \( \begin{tikzpicture} ... \( [HERE] \) ... \end{tikzpicture} \)
	['texMathZoneX', 'texMathZoneT'] i.e. \( \begin{tikzpicture} ... [HERE] \( \) ... \end{tikzpicture} \)
	['texMathZoneX'] i.e. \( [HERE] \begin{tikzpicture} ... \( \) ... \end{tikzpicture} \)
Todo: \includegraphics{} completion complets to full path, check if tex supports relative path up to the current file. If so then use it (it is better when using svn/git/...)
Todo: Completion for \missingfigure options is not working (just one option :).
Todo: OmniCompletion: 
	- atplib#complete#CloseLastEnvironment is not yet just returning (when closing environments)
	- close } when there is no completion.
Todo: gw is not working in:
    \section{Modules with intersection
	property}\label{sec:modules_with_int_property}
    For a flat \(R\)-module \(M\) the functor \(M\otimes-\) preserves all finite
    intersections (see~\cite[40.16]{tb-rw:corings-and-comodules}). Furthermore, it
    is not hard to show that tensoring with a flat module preserves all finite
    limits. In this section we show that there is a large class of modules for
    which the tensor product functor preserves arbitrary intersections. We will
    also construct examples of flat and faithfully modules without this property.
Todo: <C-X><C-O>
    We first prove (2): \(\psi(Q)\) is left admissible by{\todo{\(B_A<C-X><C-O>}} is not working, while <Tab> is
    (line 2234 in /home/coot/prace/galois theory/hopf-galois/HopfGaloisTheory_ii_BZR/HopfGaloisTheory-ii.tex)	FIX: atplib#complete#GetBrackets() has to be run insided first pass of omni-function, in the second pass cursor is set to a different position and it is not allowed to move the cursor.
	FIX: atplib#complete#GetBrackets() has to be run inside first pass of omni-function, in the second pass cursor is set to a different position and it is not allowed to move the cursor (it is not allowed to move the cursor to the right from where it was set by the first pass of omni-completion function.
Todo: error openning sty file.
Todo: \cite{pattern with \, for example: \cite{author\>.*Montgomery<Tab> is not working.
Todo: {\begin{env}
       \end{env}<Tab> is not closing {:}
       \begin{a}
       		\begin{b}
		\end{b}
		<Tab> is not closing \begin{a} with \end{a}
	Done?
Todo: when QF->tex window, cgetfile is issued, and if I changed the error in cget file it is reset to the first one - this is not good.
Todo: store fd files in a variable (global one) like g:atp_LatexPackages.
Done: in memoir \ref{thm:<tab> the theorem numbers are not write, GrepAuxFile should be adjusted for memoir.
	also completing by numbers is not working.
Todo: adding \(:\) to bracket dict is not a good solution (since $:$ will not work)
Todo:
    \(\bigl(A^{co\,H/I}<TAB>(A^{\mathit{op}})^{co\,H^{\mathit{op}}/I^{\mathit{op}}}\) by
    closes ) but without \bigr! if a '='  is given before the following ( it works
Todo: reverse_search.py should not hang out when vim is suspended.
Todo: cmap <space> when cptoptions=-B is mapped in : cmd line while it should not.
Todo: vm -> make omap m and M.
Done: visual maps { } should skip all the empty lines (not just by one line)
Todo: 'tikzpicture commands' is never set in TabCompletion (& OmniCompletion)
Done: \pagenumbering{roman<Tab> one cannot close a bracket.
Done: add count to atplib#motion#SkipComment
Done (partially): E432, E426 when using CTRL-] to move to a tag (tag file not sorted).
    I can use 'notagbsearch' since there are  not too many tags in tag files that I use.
    The problem is that I don't know how to sort corectly the tags which
    contain capital letter (ignore case and case sorts in python are not
    working, vim requires cacse-fold sorting (?) method)
Todo: b:atp_ProgressBar should work in all project files (not only the main file).
	usually it works.
Todo: timeout if % in TexAlign (bmatrix) is working too long - there might be not closed brackets.
Note: if I change bib file (for example article title) and run :MakeLatex
    command, then it will run only once after running bibtex, and thus the change
    will not be visible in the pdf file. One need run latex once more.
Todo: 
	\begin{env1} <HERE %>
	    \begin{env2} % which is not closed
	\end{env1}
	Then % is not working.
Done: :Dictionary when there is no internet connection.
Done: when openning a new, empty tex buffer there are errors.
Todo: '' map is not working for \'{}
Done: r (replace) is not well working with using '.' after.
	:Replace command
Todo: set printexpr to print pdf via ssh.
    let &printexpr="system('ssh mszamo@ssh.math.ist.utl.pt lpr'.(&printdevice=='' ? '' : ' -P'.&printdevice).' '.fnamemodify(v:fname_in,':r').'.pdf') + v:shell_error"
Todo: \cite completion when bibliography is given (in HopfGaloisTheory-ii_publication.tex)
	(by authors)
	Done: match also bibitem labels (\bibitem[label][key]) but it still not I'd like to make: match the entire \bibitem command.
	This is simple: copy whole bibliography to a variable and then split(s:bibliography, '\\bibitem\>') :)
Todo: (:) motions, the vim motion ( do not know that \begin{end} ends sentence.
Done: TexAlign -- add smallmatrix environment.
Done: table environment (tabular already added)
Done: TexAlign with \\[5mm] or \\\hline or \\\hrule (in tables with table package)

Note: command values completion allows 3 nested levels of {} "{{{}}}" is fine, make it four: the pattern is in 3 places.
Todo: TexAlign is splitting \& into \ &.
	TexAlign for longtables
Todo: ProgressBar in project files.
Todo: TOC should make toc of projects not toc of files.

======
TODO: periodically check synctex for:
http://tex.stackexchange.com/questions/25578/why-is-synctex-in-tl-2011-so-fussy-about-filenames
This seems to be fixed in synctex veresion 1.17 (synctex_parser_readme.txt)
I have version 1.15
=====

Todo: file path are not working in quick fix error list (files are not recognized well)
	For this I need to write a log parser (like the one written in gawk).
Todo: environment completion is very slow,
Todo: ChangeEnv in project files is slow. Disable the feature with bang (or enable it with bang - this is better).
Todo: statusline: ATPStatusline() --> atplib#motion#ctoc() --> atplib#motion#maketoc()
Todo: <space> map is not working when there is cpo-=B.
Done: progress bar when switching buffers. (using global variable g:atp_ProgressBarValues instead of local ones.)
Todo: check why the tmp files are not deleted on exit.
Done: if tex is called via commands or maps atplib#write() should not be used!
	i.e. the nobackup option!

Todo:	Furthermore, whole project should be saved (using update command)	
	this can be done using :bufdo update
	!BUT THIS IS TOO SLOW!
Done: yi( when inside \bigl(...\bigr) will yank \bigr.
	How to make it compatible with yankring? (I think omaps doesn't have to be compatible with yankring)
Todo: g:atp_autex if present should overwrite b:atp_autex. This could work better for project files.
	(Switching between buffers doesn't change b:atp_autex, so it is hard to set it for a project.)
	Am I right? It seems it is working fine.
Todo: in atplib#search#RecursiveSearch() make the patter \\\(intput\|include\|subfile\) depending on atplib#search#SearchPackage('subfiels').
Todo: completion for should use global aux file not the local one.
Todo: Status line when changing project files CTOC comes back, while it should not.
Done: add \hyperref[this_arg]{} completion (the same as for \ref{} command)
	also added \pageref, \autoref, \pageautoref and its stared version 
	(without checking if hyperref package is installed)
Todo: when using subfiles package, I can use ifthen package and the command \ifthenelse{\value{chapter}=0}{\setcounter{chapter}{3}}{} to manually set the right chapter number of a subfile. In this way I will be able to effectively use the \ref{} completion while looking at the pdf output. This should be noted in the documentation.
Todo: S when goes to next file the alternate buffer is lost (as for ^)
	Now it works fine, except when when the ending file is the same as the starting one (then the alternate file becomes the same as the current one in some cases). But, I think that, this cannot be fixed.
Todo: rewrte b:atp_LatexPIDs and b:atp_PythonPIDs like b:atp_ProgressBar -> g:atp_ProgressBarValues.
	No, leave it as it is, they are remebered acrross project files.
Todo: :TEX command changes the ErrorFormat
Todo: :DebugMode Debug when copen is opened moved to first error (while it should not)
Todo: use out file to make the toc (- only used by pdflatex with hyperref).
Todo: when opening a project file and the error file is the global one (is still the same) the error format shall be preserved.
	ATP should not issue cgetfile unless b:atp_autex=2
Done: latextags.py should pass errors to vim!
Done: in ATP_files/compiler.vim SetErrorFormat is called. It should preserve the error format and do not run cgetfile under certain conditions. 
Todo: When the viewer is outputing errors then :View command is not seeing them.
Todo: :'<,'>Wrap ...   - there should be an operator which acts like the last used :Wrap.
Todo: b:atp_XpdfServer (and other project variables), if another project file
is loaded the value of that one should be used. Or provide global variables.
Done: going out of debug mode, when there are no errors shouldn't be the default behaviour.
Todo: completion for beamer commands (for example: \setbeamercolor{...})
	Check the web page: http://en.wikibooks.org/wiki/LaTeX/Presentations
Todo: help to choose colors.
Todo: yae should not change the window position (try to yank environment which is at the bottom of the window).
	and  it should copy with \n (using V mode ) (?)
Todo: \pause should stop inner paragraph in beamer (gw)
Todo: <Tab> (only the file under the cursor, i.e. less than just one project),
	<S-Tab> (global: all files) in __ToC__ buffer: cycle through levels of toc.
ToDoc: try to set makeprg to sth that ATP is using (makelatex.py)
Todo: b:atp_OutDir is not used by atplib#compiler#PythonCompiler(), makelatex.py, etc.
	Note that if :TEXL is running the variable b:atp_OutDirLocal should be used.
ToDoc: scan for packages and classes under $TEXMFHOME tree.
	time < 0.1s
Test: :TOC! should write (:update) the current file (ideally the whole project) so that toc indeed will get updated.
	this could be omitted if we pass the buffer as alist (or string) to the python script.
Todo: 'printdevice' can be set to printer_name@server_name
Todo: >c, >s, >S commands if wrote in python not using :S could be much faster.
	probably opening takes time -> check how much time it takes to open a file using :S.
Done: :RemoveFromToC is not documented. Should also be noted in :TOC command
    (where there is written about many files in ToC).

Test: TOC (g:atp_python_toc=0) after changing atplib#tools#getlinenr()
Todo?: YankSection adds an empty line at the begining: it might lead to adding
	more and more empty lines to the file. To prevent this :YankSection
	should try to yank previous line if it matches '^\s*$'.  
Testing: maybe _ToC_ should have buftype = 'nofile'
Todo: when saving a buffer two lines in ToC are heighlighted.
	seting ei=all in atplib#motion#UpdateToCLine() makes the function much faster bu doesn't solve the problems
	What does it break?
Done: :S fails  in a strange way if there is swp file present. Try with putting a swp file of the main file.
	set some options which will handle the situation: v:swapchoice, SwapExists autocommand!
	for example raise an exception (echoerr) when SwapExists. This function should be turned on off (so wrap this into a fucntion:)

	    remove ! from silent! exectue open in atplib#search#RecursiveSearch() 
	Why the main file is loaded (and not listed) on when starting with another input file.
	It is loaded by atplib#search#DocumentClass() function, which is using 1lvimgrep 
Todo: complete: sort by most used (wow!) (idea from vim.use 22Feb2012)
	this might depend on document class (article/book/beamer)
Todo: >f and >F maps.
Todo: log file might contain:
	    [1{/usr/local/texlive/2011/texmf-var/fonts/map/pdftex/updmap/pdftex.map}][2]
Test: VimL Dsearch and signs (pattern in which we get sign name, can the sign name be empty string?).
Todo: latex_log.py
    ! Undefined control sequence.
    \fms ...tcolor {red}{#2}}\ {\smalltt [#3]}\dotfil 
						      {#4}\par 
    l.193 ... {\tt [N]} times in {\tenit silent} mode}

    Ignore message after l.193

    Go through TeXBook p.297 (errors)
Done: diacritics (g:atp_imap_inteligent_diacritics = 1)
Todo: find which part of the code should be moved to plugin/tex_atp.vim file.
Todo: preserve settings of vim options from project file (fdm).
Todo: change the default value of g:atp_vmap_text_font_leader = "_" (doc; from <LocalLeader> -> _ )
Todo: texdef (perl script) can find all definitions from a package
	@documentclassoptions
Todo: texcount (counts words in a LaTeX file)
	 /usr/local/texlive/2011/texmf-dist/scripts/texcount/texcount.pl
Todo: check how many more commands I get with processing package files with g:atp_package_dict.ScanPackage.
Todo: UpdateATP should update package files with the list of
    g:atp_package_commands. They should be scanned recursively and the order of
    existing variables should be preserved: new commands should be added at
    the end - in this way I can provide a good order for the most important
    commands.
Done: Commands completion: commands from document class. 
Todo: pandoc: markdown -> LaTeX (nice for writting simple files).
Todo: TabCompletion is calling g:atp_package_dict.ScanPackage too often.
	when there is no options (like with inputenc.sty) TabCompletion returns 0
Todo: after sourcing vimrc file swithing between buffers changes :Status! to :Status (if :Status! is set)
Done: b:atp_autex=2 should not be set in the main file?
        now LocalCompiler seems to work fine also for the main file.
Todo: +++: is hard to write +\sum: 
    Solution: one can do type '+ ++'
Done: Should g:atp_imap_diacritics_iterligent be 0 by default.
    Better interface: g:atp_imap_diacritics = 0,1,2: 0 off, 1 normal, 2 inteligent.
Todo: how to use pybib parser is at the end of /dane/working_copy/pybtex/docs/rst/manual.rst
	Can this be faster than atplib#bibsearch#searchbib_py?
Todo: the todo in atplib#bibsearch#searchbib_py
Todo: there is no imap for \dots.
Todo: when two tex files are opened in two tabs. If one has DebugMode debug
    and the others one in silent, going to it the QuickFixWindow gets opened.
Todo: GotoLabel : if there is just one label don't ask which label to take.
Todo: in ATP: _log file :
Package Warning::/home/coot/prace/galois theory/hopf-galois/HopfGaloisTheory_ii_BZR/.tmp/Ipowgj/HopfGaloisTheory-ii.aux::0::0::Citation(s) may have changed. Rerun to get citations correct. (natbib)

The aux file path should be rewritten.
Done (test!): Backward search doesn't change the motion list for CTRL-O, CTRl-I.
	It remembers the position before reverse search is done. Is this what
	I want?, maybe it is better to remember the posision after revese
	search is done (in this way revese search posisions get remembered).

	I prefere the other way around: first set mark ' then move the cursor.
	In this way '' will get back to the place before reverse search was
	done.
Todo: TabCompletion is not checking if the command alread ands with {, for
    example in letter class \signa<C-X><C-O{ will end with \signature{{, i.e.
    with {{.
Todo: options of \includegraphics{} command. (And values if there is a special directory for graphics files in tex).
Todo: when starting new file the filetype recognized by vim is plaintex (and
    thus b:atp_TexCompiler = "pdftex"). There should be a way to tell vim that
    every new file is a LaTeX file.

Todo: python scripts are not compatible with python3:
    it should be done:
    fo = open(..., 'br')
    string=fo.read().decode(errors="replace") # fo.read() in the mode "br" returns byte string, decoding returns an utf8 string.

    however this is not working in python2.7 where just open(..., 'r').read() works fine.

Note: latextags.py when executed with python3 takes 200ms and when executed with python2 1400ms!
__Note__: EasyMotion commands changes b:changedtick and thus :TEX is run if b:atp_autex is on.
Todo: atp_quickref.tex	maxfuncdepth exceeded by the call of TreeOfFiles_vim().
Todo: change list of maps to dictionaries and Define entries only if the user
has not defined them. This will make easier to modify the maps.
Todo: .tmp directory is not removed on exit.
Todo: use :echon instead of :echo (but wait with changes and test them properly).
	There is no need since it is fixed by a recent patch.
Done: try 'set ei=Syntax' in :S command.
	It is faster: 3.6 -> 3.2 in  a long project with 8 input files.
Partially: latex_log.py  : should know all things in log file that quotes the file so that unclosed brackets will not break things. See ~/tmp/tex/phd/hg.log and the corresponding hg._log
    (added removeing lines just after Runaway argument?)
    we should ignore brackets after :
l.57 \chapter
    always after 'l.100 ' the tex file is cited and we don't want to remove this part of the log.
Todo: use v:register where needed (TOC)
Done: why scrolling log file is slow? (I checked set ei=all - it doesn't help).
	I think this is becaue TexLogCurrentFile() function which is called by the status line.
Todo: d% doesnt work over env when it is in one line. It deletes whole line.

> Note: async on windows http://vim.wikia.com/wiki/Execute_external_programs_asynchronously_under_Windows
> Note: dev/hl_echo.vim	    -- echo line with only part of it highlighted.

Todo: gf, and other methods should preserve ro? not by default but there might be an option.

Todo: Check Insert() function in plain tex files (if it correctly recognizes if we are/we are not in plain tex files).
Todo: The above todo has a comment in mappings.vim (line 1017, g:atp_imap_fonts).

Todo: see :help :search-args : when supressing the "/" the "\<{pattern}\>" is used.
Todo: list of package in a faster way.
    ___Test this!___
Todo: is psutils really neaded on MacOs/Windows?

Todo: (-20mm,-20mm) synstack inside tikzpicture is not right.
WorksFine: >e should not move just the cursor not the window view if the next position is still on the screen. Like vim commands do.
Done: b:undo_ftplugin (see :help undo_ftplugin)
    ___WorksFine: gf is not working (when swap file exists).___
Todo: d% over \left(...\right)
Not Done: gw should use winsaveview() restoreview() functions.
    ___The function winrestview() might change cursor position.___
	
Todo: vip in the first paragraph visualises the part after \end{proof}
    ___This seems to work just fine!___

    and \(\qid(H)\ni I\selmap{}I^{{\op}}\coloneq S_H(I)\in\qid(H^{{\op}})\) is
    a bijection, the two sets in~\eqref{eq:phi_bar} are in a bijective
    correspondence via \(I\selmap{}I^{{\op}}\). Now, the formula
    \(\psi^{{\op}}(S^{{\op}})=\bigl(\psi(S)\bigr)^{{\op}}\) follows from
    equation~\eqref{eq:wedge_and_op}.  
\end{proof} 
Another way of proving the equation
\(\psi^{{\op}}(S^{{\op}})=\bigl(\psi(S)\bigr)^{{\op}}\) is to show that the
map \(\chi:\Sub_\Alg(A^{{\op}}/B^{{\op}})\sir\qquot(H^{{\op}})\) given by
\(\chi(S)\coloneq\bigl(\psi(S^{{\op}})\bigr)^{{\op}}\), where
\(S\in\Sub_\Alg(A^{{\op}}/B^{{\op}})\), is an adjoint for \(\phi^{{\op}}\) and
coconlude refering to uniqness of Galois connections.

Todo: when moveing through tabs to different project with open quickfix view,
    the highlighted error changes (in the first window set to set second
    error) and in the first to first (or other one).
Todo: setting of files as above, closing debug mode with :cclose, but going
    back and forth to the other tab will reopen the quickfix window.

Todo: lvimgrep in prace/phd vim gets deadly singal.  with ":filetype off"
    everything works just fine.
Done: "\bigl( aaa X(bbb)" : try close "\bigl(" at "X" (C-XC-O) it only closes
    ")" without the size. However, if there is space between the "X" and the
    following "(" it works just fine.
Done: vip in (marks from label):

\begin{theorem}[{Galois Theory for \(H\)-comodule algebras}]\label{thm:existence} 
    Let \(A/B\) be a \(H\)-comodule algebra over a ring \(\R\) such that \(A\)
    as an \(\R\)-module is flat and satisfies the Mittag--Leffler condition.
    Then there exists a \textsf{Galois connection}:

Done: add a bang to :MakeLatex. With bang save the all the buffers which
    belong to the project.
    interferes with aucommand which triggers atplib#motion#LatexTags() (in my atprc file)
    IMPLEMENT THE BANG AS IN DOC!
Todo: Change the bang for :TEX and add it for :MakeLatex to save the project.
    I don't really use the current bang.


Todo: change how b:TypeDict, b:ListOfFiles are accessed in complete#TabCompletion() function.
    make it through get() with a default value and issue a worning whenever a file is missing.
	like in the line 2796 of complete.vim
Done: \subseteq is missing in completion command list.
Done: find a good map for :TEXL command.
    TESTING: \\l it might be a better choice than \k.
Todo: g:atp_math_commands_PRE - they should be placed at the begining (after sorting (?))
Done: g:atp_Python is not documented.
Done: pyeval() introduced in patch 569 (see LocalCommands_py() or TreeOfFiles_py())
Done: ShowErrorsL (from the local compilation - [subfiles])
Todo: removed || has("python3") to internal python code.
    is has("python3") one has to use python3 command. I Could define Python
    command which would work as Python or Python3 command though. It should be tested.
Todo: add count for: <i, >i (previous, next input file)
Todo: in my vim: \dots and \ldots use the same utf-8 symbol (conceal feature)
Done: TEXL doesn't allow for the range.
Todo: atplib#callback#Signs() doesn't add new signs after some of the where put.
    Though this works after cgetfile is used, but not if cgetfile is used
    inside atplib#callback#CallBack() or atplib#callback#Signs() itself (when
    called after \l, but it works for the last command when run manually).
Todo: \phantom is not in completion (while in align environment)
Done: \draw[|->] \vdash map is interfering
Todo: vim normal command inside equation environment with label (visualies the label as well)
Done: when using subfiles package, the subfile.aux should be checked for
completion of labels inside \ref{} and \eqref{} commands.
Todo: :F should not change the view if the place to go is on the same screen
Todo: why tex syntax file is covering spell mistakes
    this is not an ATP problem. What helps is :syntax sync minlines=100 (or :syntax sync fromstart)
Done: :make command is not working.
Todo: TabCompletion: Packages (line 2453) shouldn't use g:atp_packages
    variable but the package list of the current preambule. g:atp_packages is
    a list of packages written down in the directory ATP_files/packages.
Todo: write completion script for subfiles. For example \documentclass[<main_tex_file>]{subfiles}.
